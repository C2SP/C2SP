package main

import (
	"io"
	"os"
	"path/filepath"
	"sort"
	"strings"
	"text/template"
)

//go:generate go run .

func main() {
	specs, err := filepath.Glob("../../*.md")
	if err != nil {
		panic(err)
	}
	for i := range specs {
		specs[i] = filepath.Base(specs[i])
		specs[i] = strings.TrimSuffix(specs[i], ".md")
	}
	sort.Slice(specs, func(i, j int) bool {
		return strings.ToLower(specs[i]) < strings.ToLower(specs[j])
	})

	tmpl, err := os.ReadFile("policy.yml.tmpl")
	if err != nil {
		panic(err)
	}

	f, err := os.Create("../policy.yml")
	if err != nil {
		panic(err)
	}
	defer f.Close()

	io.WriteString(f, `# Generated by "go generate ./policy". DO NOT EDIT.`)
	io.WriteString(f, "\n\n")
	t := template.Must(template.New("policy").Parse(string(tmpl)))
	if err := t.Execute(f, specs); err != nil {
		panic(err)
	}
}
